/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { OracleValidation, OracleValidationArgs } from '../../hooked';
export type PreconfiguredAssetPdaCustomOffsetInitInstructionAccounts = {
    signer: Signer;
    payer?: Signer;
    account: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type PreconfiguredAssetPdaCustomOffsetInitInstructionData = {
    discriminator: Array<number>;
    authority: PublicKey;
    asset: PublicKey;
    oracleData: OracleValidation;
};
export type PreconfiguredAssetPdaCustomOffsetInitInstructionDataArgs = {
    authority: PublicKey;
    asset: PublicKey;
    oracleData: OracleValidationArgs;
};
export declare function getPreconfiguredAssetPdaCustomOffsetInitInstructionDataSerializer(): Serializer<PreconfiguredAssetPdaCustomOffsetInitInstructionDataArgs, PreconfiguredAssetPdaCustomOffsetInitInstructionData>;
export type PreconfiguredAssetPdaCustomOffsetInitInstructionArgs = PreconfiguredAssetPdaCustomOffsetInitInstructionDataArgs;
export declare function preconfiguredAssetPdaCustomOffsetInit(context: Pick<Context, 'payer' | 'programs'>, input: PreconfiguredAssetPdaCustomOffsetInitInstructionAccounts & PreconfiguredAssetPdaCustomOffsetInitInstructionArgs): TransactionBuilder;
