/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { PreconfiguredPdaWithPubkeyArgs, PreconfiguredPdaWithPubkeyArgsArgs } from '../types';
export type PreconfiguredRecipientPdaInitInstructionAccounts = {
    signer: Signer;
    payer?: Signer;
    account: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type PreconfiguredRecipientPdaInitInstructionData = {
    discriminator: Array<number>;
    args: PreconfiguredPdaWithPubkeyArgs;
};
export type PreconfiguredRecipientPdaInitInstructionDataArgs = {
    args: PreconfiguredPdaWithPubkeyArgsArgs;
};
export declare function getPreconfiguredRecipientPdaInitInstructionDataSerializer(): Serializer<PreconfiguredRecipientPdaInitInstructionDataArgs, PreconfiguredRecipientPdaInitInstructionData>;
export type PreconfiguredRecipientPdaInitInstructionArgs = PreconfiguredRecipientPdaInitInstructionDataArgs;
export declare function preconfiguredRecipientPdaInit(context: Pick<Context, 'payer' | 'programs'>, input: PreconfiguredRecipientPdaInitInstructionAccounts & PreconfiguredRecipientPdaInitInstructionArgs): TransactionBuilder;
