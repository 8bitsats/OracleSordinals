/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { PreconfiguredPdaWithPubkeyArgs, PreconfiguredPdaWithPubkeyArgsArgs } from '../types';
export type PreconfiguredCollectionPdaSetInstructionAccounts = {
    signer: Signer;
    account: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type PreconfiguredCollectionPdaSetInstructionData = {
    discriminator: Array<number>;
    args: PreconfiguredPdaWithPubkeyArgs;
};
export type PreconfiguredCollectionPdaSetInstructionDataArgs = {
    args: PreconfiguredPdaWithPubkeyArgsArgs;
};
export declare function getPreconfiguredCollectionPdaSetInstructionDataSerializer(): Serializer<PreconfiguredCollectionPdaSetInstructionDataArgs, PreconfiguredCollectionPdaSetInstructionData>;
export type PreconfiguredCollectionPdaSetInstructionArgs = PreconfiguredCollectionPdaSetInstructionDataArgs;
export declare function preconfiguredCollectionPdaSet(context: Pick<Context, 'programs'>, input: PreconfiguredCollectionPdaSetInstructionAccounts & PreconfiguredCollectionPdaSetInstructionArgs): TransactionBuilder;
